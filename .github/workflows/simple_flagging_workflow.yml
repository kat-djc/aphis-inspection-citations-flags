name: Simple Flagging Workflow

on:
  workflow_dispatch:

jobs:
  process-data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Python environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Configure Git Settings
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "GitHub Actions"

    - name: Update submodule and fetch the specific file
      run: |
        git submodule update --init --recursive
        cd aphis-inspection-reports
        git fetch origin
        git checkout origin/main -- data/combined/inspections-citations.csv
    
    - name: Extract new rows
      id: extract_new_rows
      run: |
        source venv/bin/activate
        cd scripts
        # Run the script and capture both stdout and stderr
        SCRIPT_OUTPUT=$(python extract_new_rows.py)
        
        # Print the output from the script to the log
        echo "$SCRIPT_OUTPUT"
        
        # Check if the result is empty
        NEW_ROWS=$(echo "$SCRIPT_OUTPUT" | tail -n 1)
        if [[ "$NEW_ROWS" == "No new data" ]]; then
          echo "No new data. All flagged datasets are up to date."
          echo "NO_NEW_DATA=true" >> $GITHUB_ENV
          exit 0  # Stop the entire workflow if no new data
        fi
        
        # Extract the file path for new rows
        NEW_PATH=$(echo "$SCRIPT_OUTPUT" | grep "Generated file path:" | sed 's/Generated file path: //')
        echo "MAIN_OUTPUT_PATH=$NEW_PATH" >> $GITHUB_ENV


    - name: Flag extreme temperatures
      if: ${{ env.NO_NEW_DATA != 'true' }}
      run: |
        source venv/bin/activate
        cd scripts
        python flag_extreme_temperatures.py

    - name: Flag air transportation issues
      if: ${{ env.NO_NEW_DATA != 'true' }}
      run: |
        source venv/bin/activate
        cd scripts
        python flag_air_transport.py

    - name: Append new rows for air transport
      if: ${{ env.NO_NEW_DATA != 'true' }}
      run: |
        source venv/bin/activate
        cd scripts
        python append_new_rows.py \
          --original_file_path ${{ github.workspace }}/data/output/air_transport/inspections_citations_with_air_transport_flags.csv \
          --new_rows_file_path ${{ github.workspace }}/data/flagging_process/air_transport/initial_flagged.csv \
          --combined_file_path ${{ github.workspace }}/data/output/air_transport/inspections_citations_with_air_transport_flags.csv

    - name: Append new rows for extreme temperatures
      if: ${{ env.NO_NEW_DATA != 'true' }}
      run: |
        source venv/bin/activate
        cd scripts
        python append_new_rows.py \
          --original_file_path ${{ github.workspace }}/data/output/extreme_temperatures/inspections_citations_with_extreme_temperatures_flags.csv \
          --new_rows_file_path ${{ github.workspace }}/data/flagging_process/extreme_temperatures/initial_flagged.csv \
          --combined_file_path ${{ github.workspace }}/data/output/extreme_temperatures/inspections_citations_with_extreme_temperatures_flags.csv

    - name: Debug output path
      if: ${{ env.NO_NEW_DATA != 'true' }}
      run: |
        echo "MAIN_OUTPUT_PATH value is: $MAIN_OUTPUT_PATH"
        ls -l "$MAIN_OUTPUT_PATH" || echo "File not found at $MAIN_OUTPUT_PATH"
        
    - name: Append new rows for inspections_citations
      if: ${{ env.NO_NEW_DATA != 'true' }}
      run: |
        source venv/bin/activate
        cd scripts
        python append_new_rows.py \
          --original_file_path ${{ github.workspace }}/data/output/inspections_citations_latest.csv \
          --new_rows_file_path "$MAIN_OUTPUT_PATH" \
          --combined_file_path ${{ github.workspace }}/data/output/inspections_citations_latest.csv

    - name: Commit and push changes
      if: ${{ env.NO_NEW_DATA != 'true' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/kat-djc/aphis-inspection-citations-flags.git
        git add .
        git commit -m "Update flagged data [skip ci]" || echo "No changes to commit"
        git push origin main
